package com.shinoow.abyssalcraft.common.world.gen.layer;

import com.shinoow.abyssalcraft.api.biome.ACBiomes;

import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

public class GenLayerHillsAW extends GenLayer
{
	private final GenLayer riverLayer;

	public GenLayerHillsAW(long p_i45479_1_, GenLayer p_i45479_3_, GenLayer p_i45479_4_)
	{
		super(p_i45479_1_);
		this.parent = p_i45479_3_;
		this.riverLayer = p_i45479_4_;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or Biome ID's based on the particular GenLayer subclass.
	 */
	public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
	{
		int[] aint = this.parent.getInts(areaX - 1, areaY - 1, areaWidth + 2, areaHeight + 2);
		int[] aint1 = this.riverLayer.getInts(areaX - 1, areaY - 1, areaWidth + 2, areaHeight + 2);
		int[] aint2 = IntCache.getIntCache(areaWidth * areaHeight);

		for (int i = 0; i < areaHeight; ++i)
		{
			for (int j = 0; j < areaWidth; ++j)
			{
				this.initChunkSeed((long)(j + areaX), (long)(i + areaY));
				int k = aint[j + 1 + (i + 1) * (areaWidth + 2)];
				int l = aint1[j + 1 + (i + 1) * (areaWidth + 2)];
				boolean flag = (l - 2) % 29 == 0;


				Biome biome = Biome.getBiomeForId(k);
				boolean flag1 = biome != null && biome.isMutation();

				if (k != 0 && l >= 2 && (l - 2) % 29 == 1 && !flag1)
				{
					Biome biome3 = Biome.getMutationForBiome(biome);
					aint2[j + i * areaWidth] = biome3 == null ? k : Biome.getIdForBiome(biome3);
				}
				else if (this.nextInt(3) != 0 && !flag)
				{
					aint2[j + i * areaWidth] = k;
				}
				else
				{
					Biome biome1 = biome;

					if (biome == ACBiomes.abyssal_wastelands)
					{
						biome1 = ACBiomes.abyssal_plateau;
					}

					int j2 = Biome.getIdForBiome(biome1);

					if (flag && j2 != k)
					{
						Biome biome2 = Biome.getMutationForBiome(biome1);
						j2 = biome2 == null ? k : Biome.getIdForBiome(biome2);
					}

					if (j2 == k)
					{
						aint2[j + i * areaWidth] = k;
					}
					else
					{
						int k2 = aint[j + 1 + (i + 0) * (areaWidth + 2)];
						int j1 = aint[j + 2 + (i + 1) * (areaWidth + 2)];
						int k1 = aint[j + 0 + (i + 1) * (areaWidth + 2)];
						int l1 = aint[j + 1 + (i + 2) * (areaWidth + 2)];
						int i2 = 0;

						if (i2 >= 3)
						{
							aint2[j + i * areaWidth] = j2;
						}
						else
						{
							aint2[j + i * areaWidth] = k;
						}
					}
				}
			}
		}

		return aint2;
	}
}